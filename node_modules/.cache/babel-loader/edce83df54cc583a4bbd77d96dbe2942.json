{"ast":null,"code":"var _jsxFileName = \"/Users/usamaejaz/Desktop/Nustac/quickstart-react/src/components/board-list/boardList.js\";\nimport React from \"react\";\nimport \"./boardList.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport { Box, Clickable, Flex, Heading, Label, List, ListItem } from \"monday-ui-react-core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\n\nclass BoardList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSettings = res => {\n      this.setState({\n        settings: res.data\n      });\n    };\n\n    this.getContext = res => {\n      this.setState({\n        context: res.data\n      }, this.fetchBoards);\n    };\n\n    this.fetchBoards = () => {\n      const {\n        context\n      } = this.state;\n      monday.api(`\n                query {\n                  me {\n                    name\n                  }\n                  \n                  boards(ids:[${context.boardIds}]) {\n                    name\n                    \n                    columns {\n                      title\n                      id\n                      type\n                    }\n                    \n                    groups {\n                      title\n                      color\n                      id\n                    }\n                    \n                    items {\n                      id\n                      name\n                      group {\n                        id\n                      }\n                     \n                    }\n                  }\n                } \n    `).then(res => this.setState({\n        me: res.data.me,\n        boards: res.data.boards\n      }));\n    };\n\n    this.renderItem = (color, board, item) => {\n      return /*#__PURE__*/_jsxDEV(Clickable, {\n        className: \"item\",\n        onClick: () => monday.execute('openItemCard', {\n          itemId: item.id\n        }),\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          direction: Flex.directions.COLUMN,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              borderLeft: `thick solid ${color}`\n            },\n            className: \"task\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            className: \"sentiment\",\n            text: \"Neutral\",\n            color: Label.colors.POSITIVE\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderGroup = (board, group) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          className: {},\n          style: {\n            color: group.color\n          },\n          type: Heading.types.h5,\n          value: group.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          direction: Flex.directions.ROW,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sentiment\",\n            children: \"Sentiment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-items\",\n          children: group.items.map(item => this.renderItem(group.color, board, item))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.getGroups = board => {\n      const {\n        settings\n      } = this.state;\n      const {\n        groupByColumn\n      } = settings;\n      const groupByColumnId = groupByColumn ? Object.keys(groupByColumn)[0] : null;\n      const groups = {};\n\n      for (const item of board.items) {\n        const groupId = groupByColumnId ? this.getColumnValue(item, groupByColumnId).text : item.group.id;\n\n        if (!groups[groupId]) {\n          const groupTitle = groupByColumnId ? groupId : board.groups.find(group => group.id == groupId).title;\n          const groupColor = groupByColumnId ? groupId : board.groups.find(group => group.id == groupId).color;\n          groups[groupId] = {\n            items: [],\n            id: groupId,\n            title: groupTitle,\n            color: groupColor\n          };\n        }\n\n        groups[groupId].items.push(item);\n      }\n\n      return Object.values(groups);\n    };\n\n    this.renderBoard = board => {\n      const {\n        settings\n      } = this.state;\n      const groups = this.getGroups(board);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        style: {\n          background: settings.color\n        },\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          type: Heading.types.h2,\n          value: board.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-groups\",\n          children: groups.map(group => this.renderGroup(board, group))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.openItemCard = () => {\n      monday.execute('openItemCard', {\n        itemId: 3111627985\n      });\n    };\n\n    this.state = {\n      settings: {},\n      context: {},\n      me: {},\n      boards: []\n    };\n  }\n\n  componentDidMount() {\n    monday.setToken('eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjE3NjMzMzUyMiwidWlkIjozMzM4NjAzOCwiaWFkIjoiMjAyMi0wOC0xOFQyMjozMzowOS4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTMxNDQ3NTYsInJnbiI6InVzZTEifQ.gai4a2YB1yJhoqJ-mGIX2pBNF91iArRerKqbB6n3u0s');\n    monday.listen(\"settings\", this.getSettings);\n    monday.listen(\"context\", this.getContext);\n  }\n\n  getColumnValue(item, columnId) {\n    return item.column_values.find(columnValue => columnValue.id == columnId) || {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monday-app\",\n      children: this.state.boards.map(board => {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          padding: Box.paddings.LARGE,\n          border: Box.borders.DEFAULT,\n          rounded: Box.roundeds.MEDIUM,\n          margin: Box.margins.LARGE,\n          children: this.renderBoard(board)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BoardList;","map":{"version":3,"names":["React","mondaySdk","Box","Clickable","Flex","Heading","Label","List","ListItem","monday","BoardList","Component","constructor","props","getSettings","res","setState","settings","data","getContext","context","fetchBoards","state","api","boardIds","then","me","boards","renderItem","color","board","item","execute","itemId","id","directions","COLUMN","borderLeft","name","colors","POSITIVE","renderGroup","group","types","h5","title","ROW","items","map","getGroups","groupByColumn","groupByColumnId","Object","keys","groups","groupId","getColumnValue","text","groupTitle","find","groupColor","push","values","renderBoard","background","h2","openItemCard","componentDidMount","setToken","listen","columnId","column_values","columnValue","render","paddings","LARGE","borders","DEFAULT","roundeds","MEDIUM","margins"],"sources":["/Users/usamaejaz/Desktop/Nustac/quickstart-react/src/components/board-list/boardList.js"],"sourcesContent":["import React from \"react\";\nimport \"./boardList.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport {Box, Clickable, Flex, Heading, Label, List, ListItem} from \"monday-ui-react-core\";\n\nconst monday = mondaySdk();\n\nclass BoardList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {settings: {}, context: {}, me: {}, boards: []};\n    }\n\n    componentDidMount() {\n        monday.setToken('eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjE3NjMzMzUyMiwidWlkIjozMzM4NjAzOCwiaWFkIjoiMjAyMi0wOC0xOFQyMjozMzowOS4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTMxNDQ3NTYsInJnbiI6InVzZTEifQ.gai4a2YB1yJhoqJ-mGIX2pBNF91iArRerKqbB6n3u0s');\n        monday.listen(\"settings\", this.getSettings);\n        monday.listen(\"context\", this.getContext);\n    }\n\n    getSettings = (res) => {\n        this.setState({settings: res.data});\n    };\n\n    getContext = (res) => {\n        this.setState({context: res.data}, this.fetchBoards);\n    };\n\n    fetchBoards = () => {\n        const {context} = this.state;\n        monday.api(\n            `\n                query {\n                  me {\n                    name\n                  }\n                  \n                  boards(ids:[${context.boardIds}]) {\n                    name\n                    \n                    columns {\n                      title\n                      id\n                      type\n                    }\n                    \n                    groups {\n                      title\n                      color\n                      id\n                    }\n                    \n                    items {\n                      id\n                      name\n                      group {\n                        id\n                      }\n                     \n                    }\n                  }\n                } \n    `\n        )\n            .then((res) => this.setState({me: res.data.me, boards: res.data.boards}));\n    };\n\n\n    renderItem = (color, board, item) => {\n\n        return (\n            <Clickable className=\"item\" onClick={() => monday.execute('openItemCard', {itemId: item.id})}>\n                <Flex direction={Flex.directions.COLUMN}>\n                    {<div style={{borderLeft: `thick solid ${color}`}} className=\"task\">{item.name}</div>}\n                    {<Label className=\"sentiment\" text=\"Neutral\" color={Label.colors.POSITIVE}/>}\n                </Flex>\n\n                {/*{<div className=\"sentiment\">Neutral</div>}*/}\n            </Clickable>\n        );\n    };\n\n    renderGroup = (board, group) => {\n        return (\n            <div className=\"group\">\n                <Heading className={{}} style={{color: group.color}} type={Heading.types.h5} value={group.title}/>\n                <Flex direction={Flex.directions.ROW}>\n                    {<div className=\"task\">Task</div>}\n                    {<div className=\"sentiment\">Sentiment</div>}\n                </Flex>\n\n                <div\n                    className=\"group-items\">{group.items.map((item) => this.renderItem(group.color, board, item))}</div>\n            </div>\n        );\n    };\n\n    getColumnValue(item, columnId) {\n        return item.column_values.find((columnValue) => columnValue.id == columnId) || {};\n    }\n\n    getGroups = (board) => {\n        const {settings} = this.state;\n        const {groupByColumn} = settings;\n        const groupByColumnId = groupByColumn ? Object.keys(groupByColumn)[0] : null;\n\n        const groups = {};\n        for (const item of board.items) {\n            const groupId = groupByColumnId ? this.getColumnValue(item, groupByColumnId).text : item.group.id;\n            if (!groups[groupId]) {\n                const groupTitle = groupByColumnId ? groupId : board.groups.find((group) => group.id == groupId).title;\n                const groupColor = groupByColumnId ? groupId : board.groups.find((group) => group.id == groupId).color;\n                groups[groupId] = {items: [], id: groupId, title: groupTitle, color: groupColor};\n            }\n            groups[groupId].items.push(item);\n        }\n\n        return Object.values(groups);\n    };\n\n    renderBoard = (board) => {\n        const {settings} = this.state;\n        const groups = this.getGroups(board);\n        return (\n            <div className=\"board\" style={{background: settings.color}}>\n                <Heading type={Heading.types.h2} value={board.name}/>\n                <div className=\"board-groups\">{groups.map((group) => this.renderGroup(board, group))}</div>\n            </div>\n        );\n    };\n\n    openItemCard = () => {\n        monday.execute('openItemCard', {itemId: 3111627985});\n    }\n\n    render() {\n        return (\n            <div className=\"monday-app\">\n\n                {this.state.boards.map((board) => {\n                    return <Box padding={Box.paddings.LARGE} border={Box.borders.DEFAULT} rounded={Box.roundeds.MEDIUM}\n                                margin={Box.margins.LARGE}>\n                        {this.renderBoard(board)}\n                    </Box>;\n                })}\n\n            </div>\n        );\n    }\n\n\n}\n\nexport default BoardList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}