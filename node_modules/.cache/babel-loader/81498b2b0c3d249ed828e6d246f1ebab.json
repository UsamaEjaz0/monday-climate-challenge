{"ast":null,"code":"var _jsxFileName = \"/Users/usamaejaz/Desktop/Nustac/quickstart-react/src/Table.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport { List, ListItem } from \"monday-ui-react-core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\n\nclass AppSolution extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSettings = res => {\n      this.setState({\n        settings: res.data\n      });\n    };\n\n    this.getContext = res => {\n      this.setState({\n        context: res.data\n      }, this.fetchBoards);\n    };\n\n    this.fetchBoards = () => {\n      const {\n        context\n      } = this.state;\n      monday.api(`\n    query {\n      me {\n        name\n      }\n      \n      boards(ids:[${context.boardIds}]) {\n        name\n        \n        columns {\n          title\n          id\n          type\n        }\n        \n        groups {\n          title\n          id\n        }\n        \n        items {\n          name\n          group {\n            id\n          }\n         \n        }\n      }\n    } \n    `).then(res => this.setState({\n        me: res.data.me,\n        boards: res.data.boards\n      }));\n    };\n\n    this.renderCell = (board, column, item) => {\n      // const columnValue = item.column_values.find((columnValue) => columnValue.id == column.id);\n      // const text = column.type == \"name\" ? item.name : columnValue && columnValue.text;\n      return item.name;\n    };\n\n    this.renderItem = (board, item) => {\n      const {\n        columns\n      } = board;\n      console.log(columns); // const columnValue = item.column_values.find((columnValue) => columnValue.id == columns[0].id);\n      // const text = columns[0].type == \"name\" ? item.name : columnValue && columnValue.text;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: this.renderCell(board, columns[0], item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: \"Neutral for \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderGroup = (board, group) => {\n      const {\n        columns\n      } = board;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell\",\n            children: columns[0].type === \"name\" ? group.title : columns[0].title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell\",\n            children: \"Sentiment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-items\",\n          children: group.items.map(item => this.renderItem(board, item))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.getGroups = board => {\n      const {\n        settings\n      } = this.state;\n      const {\n        groupByColumn\n      } = settings;\n      const groupByColumnId = groupByColumn ? Object.keys(groupByColumn)[0] : null;\n      const groups = {};\n\n      for (const item of board.items) {\n        const groupId = groupByColumnId ? this.getColumnValue(item, groupByColumnId).text : item.group.id;\n\n        if (!groups[groupId]) {\n          const groupTitle = groupByColumnId ? groupId : board.groups.find(group => group.id == groupId).title;\n          groups[groupId] = {\n            items: [],\n            id: groupId,\n            title: groupTitle\n          };\n        }\n\n        groups[groupId].items.push(item);\n      }\n\n      return Object.values(groups);\n    };\n\n    this.renderBoard = board => {\n      const {\n        settings\n      } = this.state;\n      const groups = this.getGroups(board);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        style: {\n          background: settings.color\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-name\",\n          children: board.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-groups\",\n          children: groups.map(group => this.renderGroup(board, group))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      settings: {},\n      context: {},\n      me: {},\n      boards: []\n    };\n  }\n\n  componentDidMount() {\n    monday.setToken('eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjE3NjMzMzUyMiwidWlkIjozMzM4NjAzOCwiaWFkIjoiMjAyMi0wOC0xOFQyMjozMzowOS4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTMxNDQ3NTYsInJnbiI6InVzZTEifQ.gai4a2YB1yJhoqJ-mGIX2pBNF91iArRerKqbB6n3u0s');\n    monday.listen(\"settings\", this.getSettings);\n    monday.listen(\"context\", this.getContext);\n  }\n\n  getColumnValue(item, columnId) {\n    return item.column_values.find(columnValue => columnValue.id == columnId) || {};\n  }\n\n  render() {\n    const {\n      me,\n      boards\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monday-app\",\n      children: this.state.boards.map(board => this.renderBoard(board))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AppSolution;","map":{"version":3,"names":["React","mondaySdk","List","ListItem","monday","AppSolution","Component","constructor","props","getSettings","res","setState","settings","data","getContext","context","fetchBoards","state","api","boardIds","then","me","boards","renderCell","board","column","item","name","renderItem","columns","console","log","renderGroup","group","type","title","items","map","getGroups","groupByColumn","groupByColumnId","Object","keys","groups","groupId","getColumnValue","text","id","groupTitle","find","push","values","renderBoard","background","color","componentDidMount","setToken","listen","columnId","column_values","columnValue","render"],"sources":["/Users/usamaejaz/Desktop/Nustac/quickstart-react/src/Table.js"],"sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport {List, ListItem} from \"monday-ui-react-core\";\nconst monday = mondaySdk();\n\nclass AppSolution extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { settings: {}, context: {}, me: {}, boards: [] };\n    }\n\n    componentDidMount() {\n        monday.setToken('eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjE3NjMzMzUyMiwidWlkIjozMzM4NjAzOCwiaWFkIjoiMjAyMi0wOC0xOFQyMjozMzowOS4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTMxNDQ3NTYsInJnbiI6InVzZTEifQ.gai4a2YB1yJhoqJ-mGIX2pBNF91iArRerKqbB6n3u0s');\n        monday.listen(\"settings\", this.getSettings);\n        monday.listen(\"context\", this.getContext);\n    }\n\n    getSettings = (res) => {\n        this.setState({ settings: res.data });\n    };\n\n    getContext = (res) => {\n        this.setState({ context: res.data }, this.fetchBoards);\n    };\n\n    fetchBoards = () => {\n        const { context } = this.state;\n        monday.api(\n                `\n    query {\n      me {\n        name\n      }\n      \n      boards(ids:[${context.boardIds}]) {\n        name\n        \n        columns {\n          title\n          id\n          type\n        }\n        \n        groups {\n          title\n          id\n        }\n        \n        items {\n          name\n          group {\n            id\n          }\n         \n        }\n      }\n    } \n    `\n            )\n            .then((res) => this.setState({ me: res.data.me, boards: res.data.boards }));\n    };\n\n    renderCell = (board, column, item) => {\n        // const columnValue = item.column_values.find((columnValue) => columnValue.id == column.id);\n        // const text = column.type == \"name\" ? item.name : columnValue && columnValue.text;\n        return item.name;\n    };\n\n    renderItem = (board, item) => {\n        const { columns } = board;\n        console.log(columns);\n        // const columnValue = item.column_values.find((columnValue) => columnValue.id == columns[0].id);\n        // const text = columns[0].type == \"name\" ? item.name : columnValue && columnValue.text;\n        return (\n            <div className=\"item\">\n                {/*{columns.map((column) => (*/}\n\n                {/*    <div className=\"cell\">{this.renderCell(board, column, item)}</div>*/}\n                {/*))}*/}\n                {\n\n                    <div className=\"cell\">{this.renderCell(board, columns[0], item)}</div>\n                }\n                {\n\n                    <div className=\"cell\">Neutral for </div>\n                }\n            </div>\n        );\n    };\n\n    renderGroup = (board, group) => {\n        const { columns } = board;\n        return (\n            <div className=\"group\">\n                <div className=\"group-title\">\n                    {/*{columns.map((column) => (*/}\n                    {/*    <div className=\"cell\">{column.type == \"name\" ? group.title : column.title}</div>*/}\n                    {/*))}*/}\n                    {\n                        <div className=\"cell\">{columns[0].type === \"name\" ? group.title : columns[0].title}</div>\n\n                    }\n                    {<div className=\"cell\">Sentiment</div>}\n                </div>\n                <div className=\"group-items\">{group.items.map((item) => this.renderItem(board, item))}</div>\n            </div>\n        );\n    };\n\n    getColumnValue(item, columnId) {\n        return item.column_values.find((columnValue) => columnValue.id == columnId) || {};\n    }\n\n    getGroups = (board) => {\n        const { settings } = this.state;\n        const { groupByColumn } = settings;\n        const groupByColumnId = groupByColumn ? Object.keys(groupByColumn)[0] : null;\n\n        const groups = {};\n        for (const item of board.items) {\n            const groupId = groupByColumnId ? this.getColumnValue(item, groupByColumnId).text : item.group.id;\n            if (!groups[groupId]) {\n                const groupTitle = groupByColumnId ? groupId : board.groups.find((group) => group.id == groupId).title;\n                groups[groupId] = { items: [], id: groupId, title: groupTitle };\n            }\n            groups[groupId].items.push(item);\n        }\n\n        return Object.values(groups);\n    };\n\n    renderBoard = (board) => {\n        const { settings } = this.state;\n        const groups = this.getGroups(board);\n\n        return (\n            <div className=\"board\" style={{ background: settings.color }}>\n                <div className=\"board-name\">{board.name}</div>\n                <div className=\"board-groups\">{groups.map((group) => this.renderGroup(board, group))}</div>\n            </div>\n        );\n    };\n\n    render() {\n        const { me, boards } = this.state;\n        return (\n            <div className=\"monday-app\">\n                {this.state.boards.map((board) => this.renderBoard(board))}\n            </div>\n        );\n    }\n}\n\nexport default AppSolution;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}