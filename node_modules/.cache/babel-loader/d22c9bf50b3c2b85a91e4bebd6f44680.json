{"ast":null,"code":"var _jsxFileName = \"/Users/usamaejaz/Desktop/Nustac/quickstart-react/src/components/board-list/boardList.js\";\nimport React from \"react\";\nimport \"./boardList.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport { Box, Clickable, Flex, Heading, Label, List, ListItem } from \"monday-ui-react-core\";\nimport Board from \"../board/board\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\n\nclass BoardList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSettings = res => {\n      this.setState({\n        settings: res.data\n      });\n    };\n\n    this.getContext = res => {\n      this.setState({\n        context: res.data\n      }, this.fetchBoards);\n    };\n\n    this.fetchBoards = () => {\n      const {\n        context\n      } = this.state;\n      monday.api(`\n                query {\n                  me {\n                    name\n                  }\n                  \n                  boards(ids:[${context.boardIds}]) {\n                    name\n                    \n                    columns {\n                      title\n                      id\n                      type\n                    }\n                    \n                    groups {\n                      title\n                      color\n                      id\n                    }\n                    \n                    items {\n                      id\n                      name\n                      group {\n                        id\n                      }\n                     \n                    }\n                  }\n                } \n    `).then(res => this.setState({\n        me: res.data.me,\n        boards: res.data.boards\n      }));\n    };\n\n    this.state = {\n      settings: {},\n      context: {},\n      me: {},\n      boards: []\n    };\n  }\n\n  componentDidMount() {\n    monday.setToken('eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjE3NjMzMzUyMiwidWlkIjozMzM4NjAzOCwiaWFkIjoiMjAyMi0wOC0xOFQyMjozMzowOS4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTMxNDQ3NTYsInJnbiI6InVzZTEifQ.gai4a2YB1yJhoqJ-mGIX2pBNF91iArRerKqbB6n3u0s');\n    monday.listen(\"settings\", this.getSettings);\n    monday.listen(\"context\", this.getContext);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monday-app\",\n      children: this.state.boards.map(board => {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          padding: Box.paddings.LARGE,\n          border: Box.borders.DEFAULT,\n          rounded: Box.roundeds.MEDIUM,\n          margin: Box.margins.LARGE,\n          children: /*#__PURE__*/_jsxDEV(Board, {\n            board: board,\n            settings: this.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BoardList;","map":{"version":3,"names":["React","mondaySdk","Box","Clickable","Flex","Heading","Label","List","ListItem","Board","monday","BoardList","Component","constructor","props","getSettings","res","setState","settings","data","getContext","context","fetchBoards","state","api","boardIds","then","me","boards","componentDidMount","setToken","listen","render","map","board","paddings","LARGE","borders","DEFAULT","roundeds","MEDIUM","margins"],"sources":["/Users/usamaejaz/Desktop/Nustac/quickstart-react/src/components/board-list/boardList.js"],"sourcesContent":["import React from \"react\";\nimport \"./boardList.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport {Box, Clickable, Flex, Heading, Label, List, ListItem} from \"monday-ui-react-core\";\nimport Board from \"../board/board\";\n\nconst monday = mondaySdk();\n\nclass BoardList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {settings: {}, context: {}, me: {}, boards: []};\n    }\n\n    componentDidMount() {\n        monday.setToken('eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjE3NjMzMzUyMiwidWlkIjozMzM4NjAzOCwiaWFkIjoiMjAyMi0wOC0xOFQyMjozMzowOS4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTMxNDQ3NTYsInJnbiI6InVzZTEifQ.gai4a2YB1yJhoqJ-mGIX2pBNF91iArRerKqbB6n3u0s');\n        monday.listen(\"settings\", this.getSettings);\n        monday.listen(\"context\", this.getContext);\n    }\n\n    getSettings = (res) => {\n        this.setState({settings: res.data});\n    };\n\n    getContext = (res) => {\n        this.setState({context: res.data}, this.fetchBoards);\n    };\n\n    fetchBoards = () => {\n        const {context} = this.state;\n        monday.api(\n            `\n                query {\n                  me {\n                    name\n                  }\n                  \n                  boards(ids:[${context.boardIds}]) {\n                    name\n                    \n                    columns {\n                      title\n                      id\n                      type\n                    }\n                    \n                    groups {\n                      title\n                      color\n                      id\n                    }\n                    \n                    items {\n                      id\n                      name\n                      group {\n                        id\n                      }\n                     \n                    }\n                  }\n                } \n    `\n        )\n            .then((res) => this.setState({me: res.data.me, boards: res.data.boards}));\n    };\n\n\n    render() {\n        return (\n            <div className=\"monday-app\">\n\n                {this.state.boards.map((board) => {\n                    return <Box padding={Box.paddings.LARGE} border={Box.borders.DEFAULT} rounded={Box.roundeds.MEDIUM}\n                                margin={Box.margins.LARGE}>\n                        {<Board board={board} settings={this.state}/>}\n                    </Box>;\n                })}\n\n            </div>\n        );\n    }\n\n\n}\n\nexport default BoardList;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,SAAQC,GAAR,EAAaC,SAAb,EAAwBC,IAAxB,EAA8BC,OAA9B,EAAuCC,KAAvC,EAA8CC,IAA9C,EAAoDC,QAApD,QAAmE,sBAAnE;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,MAAM,GAAGT,SAAS,EAAxB;;AAEA,MAAMU,SAAN,SAAwBX,KAAK,CAACY,SAA9B,CAAwC;EACpCC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,KAWnBC,WAXmB,GAWJC,GAAD,IAAS;MACnB,KAAKC,QAAL,CAAc;QAACC,QAAQ,EAAEF,GAAG,CAACG;MAAf,CAAd;IACH,CAbkB;;IAAA,KAenBC,UAfmB,GAeLJ,GAAD,IAAS;MAClB,KAAKC,QAAL,CAAc;QAACI,OAAO,EAAEL,GAAG,CAACG;MAAd,CAAd,EAAmC,KAAKG,WAAxC;IACH,CAjBkB;;IAAA,KAmBnBA,WAnBmB,GAmBL,MAAM;MAChB,MAAM;QAACD;MAAD,IAAY,KAAKE,KAAvB;MACAb,MAAM,CAACc,GAAP,CACK;AACb;AACA;AACA;AACA;AACA;AACA,gCAAgCH,OAAO,CAACI,QAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAhCQ,EAkCKC,IAlCL,CAkCWV,GAAD,IAAS,KAAKC,QAAL,CAAc;QAACU,EAAE,EAAEX,GAAG,CAACG,IAAJ,CAASQ,EAAd;QAAkBC,MAAM,EAAEZ,GAAG,CAACG,IAAJ,CAASS;MAAnC,CAAd,CAlCnB;IAmCH,CAxDkB;;IAEf,KAAKL,KAAL,GAAa;MAACL,QAAQ,EAAE,EAAX;MAAeG,OAAO,EAAE,EAAxB;MAA4BM,EAAE,EAAE,EAAhC;MAAoCC,MAAM,EAAE;IAA5C,CAAb;EACH;;EAEDC,iBAAiB,GAAG;IAChBnB,MAAM,CAACoB,QAAP,CAAgB,yNAAhB;IACApB,MAAM,CAACqB,MAAP,CAAc,UAAd,EAA0B,KAAKhB,WAA/B;IACAL,MAAM,CAACqB,MAAP,CAAc,SAAd,EAAyB,KAAKX,UAA9B;EACH;;EAkDDY,MAAM,GAAG;IACL,oBACI;MAAK,SAAS,EAAC,YAAf;MAAA,UAEK,KAAKT,KAAL,CAAWK,MAAX,CAAkBK,GAAlB,CAAuBC,KAAD,IAAW;QAC9B,oBAAO,QAAC,GAAD;UAAK,OAAO,EAAEhC,GAAG,CAACiC,QAAJ,CAAaC,KAA3B;UAAkC,MAAM,EAAElC,GAAG,CAACmC,OAAJ,CAAYC,OAAtD;UAA+D,OAAO,EAAEpC,GAAG,CAACqC,QAAJ,CAAaC,MAArF;UACK,MAAM,EAAEtC,GAAG,CAACuC,OAAJ,CAAYL,KADzB;UAAA,uBAEF,QAAC,KAAD;YAAO,KAAK,EAAEF,KAAd;YAAqB,QAAQ,EAAE,KAAKX;UAApC;YAAA;YAAA;YAAA;UAAA;QAFE;UAAA;UAAA;UAAA;QAAA,QAAP;MAIH,CALA;IAFL;MAAA;MAAA;MAAA;IAAA,QADJ;EAYH;;AAzEmC;;AA8ExC,eAAeZ,SAAf"},"metadata":{},"sourceType":"module"}