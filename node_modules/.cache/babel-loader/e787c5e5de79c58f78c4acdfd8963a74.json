{"ast":null,"code":"var _jsxFileName = \"/Users/usamaejaz/Desktop/Nustac/quickstart-react/src/Table.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport { List, ListItem } from \"monday-ui-react-core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\n\nclass AppSolution extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSettings = res => {\n      this.setState({\n        settings: res.data\n      });\n    };\n\n    this.getContext = res => {\n      this.setState({\n        context: res.data\n      }, this.fetchBoards);\n    };\n\n    this.fetchBoards = () => {\n      const {\n        context\n      } = this.state;\n      monday.api(`\n    query {\n      me {\n        name\n      }\n      \n      boards(ids:[${context.boardIds}]) {\n        name\n        \n        columns {\n          title\n          id\n          type\n        }\n        \n        groups {\n          title\n          id\n        }\n        \n        items {\n          name\n          group {\n            id\n          }\n          \n          column_values {\n            id\n            value\n            text\n          }\n        }\n      }\n    } \n    `).then(res => this.setState({\n        me: res.data.me,\n        boards: res.data.boards\n      }));\n    };\n\n    this.renderCell = (board, column, item) => {\n      // const columnValue = item.column_values.find((columnValue) => columnValue.id == column.id);\n      // const text = column.type == \"name\" ? item.name : columnValue && columnValue.text;\n      const text = \"This is F\";\n      return text;\n    };\n\n    this.renderItem = (board, item) => {\n      const {\n        columns\n      } = board;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: columns.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: this.renderCell(board, column, item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderGroup = (board, group) => {\n      const {\n        columns\n      } = board;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-title\",\n          children: columns.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell\",\n            children: column.type == \"name\" ? group.title : column.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-items\",\n          children: group.items.map(item => this.renderItem(board, item))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.getGroups = board => {\n      const {\n        settings\n      } = this.state;\n      const {\n        groupByColumn\n      } = settings;\n      const groupByColumnId = groupByColumn ? Object.keys(groupByColumn)[0] : null;\n      const groups = {};\n\n      for (const item of board.items) {\n        const groupId = groupByColumnId ? this.getColumnValue(item, groupByColumnId).text : item.group.id;\n\n        if (!groups[groupId]) {\n          const groupTitle = groupByColumnId ? groupId : board.groups.find(group => group.id == groupId).title;\n          groups[groupId] = {\n            items: [],\n            id: groupId,\n            title: groupTitle\n          };\n        }\n\n        groups[groupId].items.push(item);\n      }\n\n      return Object.values(groups);\n    };\n\n    this.renderBoard = board => {\n      const {\n        settings\n      } = this.state;\n      const groups = this.getGroups(board);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        style: {\n          background: settings.color\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-name\",\n          children: board.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-groups\",\n          children: groups.map(group => this.renderGroup(board, group))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      settings: {},\n      context: {},\n      me: {},\n      boards: []\n    };\n  }\n\n  componentDidMount() {\n    monday.setToken('eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjE3NjMzMzUyMiwidWlkIjozMzM4NjAzOCwiaWFkIjoiMjAyMi0wOC0xOFQyMjozMzowOS4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTMxNDQ3NTYsInJnbiI6InVzZTEifQ.gai4a2YB1yJhoqJ-mGIX2pBNF91iArRerKqbB6n3u0s');\n    monday.listen(\"settings\", this.getSettings);\n    monday.listen(\"context\", this.getContext);\n  }\n\n  getColumnValue(item, columnId) {\n    return item.column_values.find(columnValue => columnValue.id == columnId) || {};\n  }\n\n  render() {\n    const {\n      me,\n      boards\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monday-app\",\n      children: this.state.boards.map(board => this.renderItem(board))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AppSolution;","map":{"version":3,"names":["React","mondaySdk","List","ListItem","monday","AppSolution","Component","constructor","props","getSettings","res","setState","settings","data","getContext","context","fetchBoards","state","api","boardIds","then","me","boards","renderCell","board","column","item","text","renderItem","columns","map","renderGroup","group","type","title","items","getGroups","groupByColumn","groupByColumnId","Object","keys","groups","groupId","getColumnValue","id","groupTitle","find","push","values","renderBoard","background","color","name","componentDidMount","setToken","listen","columnId","column_values","columnValue","render"],"sources":["/Users/usamaejaz/Desktop/Nustac/quickstart-react/src/Table.js"],"sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport {List, ListItem} from \"monday-ui-react-core\";\nconst monday = mondaySdk();\n\nclass AppSolution extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { settings: {}, context: {}, me: {}, boards: [] };\n    }\n\n    componentDidMount() {\n        monday.setToken('eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjE3NjMzMzUyMiwidWlkIjozMzM4NjAzOCwiaWFkIjoiMjAyMi0wOC0xOFQyMjozMzowOS4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTMxNDQ3NTYsInJnbiI6InVzZTEifQ.gai4a2YB1yJhoqJ-mGIX2pBNF91iArRerKqbB6n3u0s');\n        monday.listen(\"settings\", this.getSettings);\n        monday.listen(\"context\", this.getContext);\n    }\n\n    getSettings = (res) => {\n        this.setState({ settings: res.data });\n    };\n\n    getContext = (res) => {\n        this.setState({ context: res.data }, this.fetchBoards);\n    };\n\n    fetchBoards = () => {\n        const { context } = this.state;\n        monday.api(\n                `\n    query {\n      me {\n        name\n      }\n      \n      boards(ids:[${context.boardIds}]) {\n        name\n        \n        columns {\n          title\n          id\n          type\n        }\n        \n        groups {\n          title\n          id\n        }\n        \n        items {\n          name\n          group {\n            id\n          }\n          \n          column_values {\n            id\n            value\n            text\n          }\n        }\n      }\n    } \n    `\n            )\n            .then((res) => this.setState({ me: res.data.me, boards: res.data.boards }));\n    };\n\n    renderCell = (board, column, item) => {\n        // const columnValue = item.column_values.find((columnValue) => columnValue.id == column.id);\n        // const text = column.type == \"name\" ? item.name : columnValue && columnValue.text;\n        const text = \"This is F\";\n        return text;\n    };\n\n    renderItem = (board, item) => {\n        const { columns } = board;\n        return (\n            <div className=\"item\">\n                {columns.map((column) => (\n                    <div className=\"cell\">{this.renderCell(board, column, item)}</div>\n                ))}\n            </div>\n        );\n    };\n\n    renderGroup = (board, group) => {\n        const { columns } = board;\n        return (\n            <div className=\"group\">\n                <div className=\"group-title\">\n                    {columns.map((column) => (\n                        <div className=\"cell\">{column.type == \"name\" ? group.title : column.title}</div>\n                    ))}\n                </div>\n                <div className=\"group-items\">{group.items.map((item) => this.renderItem(board, item))}</div>\n            </div>\n        );\n    };\n\n    getColumnValue(item, columnId) {\n        return item.column_values.find((columnValue) => columnValue.id == columnId) || {};\n    }\n\n    getGroups = (board) => {\n        const { settings } = this.state;\n        const { groupByColumn } = settings;\n        const groupByColumnId = groupByColumn ? Object.keys(groupByColumn)[0] : null;\n\n        const groups = {};\n        for (const item of board.items) {\n            const groupId = groupByColumnId ? this.getColumnValue(item, groupByColumnId).text : item.group.id;\n            if (!groups[groupId]) {\n                const groupTitle = groupByColumnId ? groupId : board.groups.find((group) => group.id == groupId).title;\n                groups[groupId] = { items: [], id: groupId, title: groupTitle };\n            }\n            groups[groupId].items.push(item);\n        }\n\n        return Object.values(groups);\n    };\n\n    renderBoard = (board) => {\n        const { settings } = this.state;\n        const groups = this.getGroups(board);\n\n        return (\n            <div className=\"board\" style={{ background: settings.color }}>\n                <div className=\"board-name\">{board.name}</div>\n                <div className=\"board-groups\">{groups.map((group) => this.renderGroup(board, group))}</div>\n            </div>\n        );\n    };\n\n    render() {\n        const { me, boards } = this.state;\n        return (\n            <div className=\"monday-app\">\n                {this.state.boards.map((board) => this.renderItem(board))}\n            </div>\n        );\n    }\n}\n\nexport default AppSolution;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}