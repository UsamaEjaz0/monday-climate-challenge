{"ast":null,"code":"var _jsxFileName = \"/Users/usamaejaz/Desktop/Nustac/quickstart-react/src/TableView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import \"antd/dist/antd.css\";\n\nimport \"index.css\";\nimport moment from \"moment\";\nimport { Button } from \"monday-ui-react-core\";\nimport { Form, Input, InputNumber, Popconfirm, Table, Typography, Avatar } from \"antd\";\nimport { useEffect } from \"react\"; // Table View Return\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TableView() {\n  _s();\n\n  const originData = [];\n  const [form] = Form.useForm();\n  const [data, setData] = useState(originData);\n  const [editingKey, setEditingKey] = useState(\"\");\n  const [mePersonData, setMePersonData] = useState([]);\n  const [imgSrc, setImgSrc] = useState(\"\");\n  const [activityLoader, setActivityLoader] = useState(true);\n  const [corporateHolidays, setCorporateHolidays] = useState([\"2022-08-16\", \"2022-08-03\"]);\n  const [personalHolidays, setPersonalHolidays] = useState([\"2022-08-24\", \"2022-08-10\"]);\n  const [corporateData, setCorporateData] = useState([]);\n  useEffect(() => {\n    fetchCorporateHolidays().then(function (value) {\n      console.log(\"PASSED\"); // setCorporateArray();\n    }, function (error) {\n      console.log(\"Null\");\n    }); // fetchMeData();\n    // setImgSrc(mePersonData.photo_thumb_small);\n  }, []);\n\n  async function fetchCorporateHolidays() {\n    let query = `query {\n    boards (ids: 2901550979) {\n    name\n    state\n    board_folder_id\n    items {\n      id\n      name\n      column_values {\n        text\n      }\n    }\n  }\n}`;\n    await fetch(\"https://api.monday.com/v2\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjE2ODYwNzk4NiwidWlkIjozMTY5Njk3MCwiaWFkIjoiMjAyMi0wNy0wNFQxMToxMTozMC4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTE0MTA1MTIsInJnbiI6InVzZTEifQ.AQ0i2OQeXqru5sMmRx6h-CCKf6d-CMJ_a1sp8tFJp38\"\n      },\n      body: JSON.stringify({\n        query: query\n      })\n    }).then(res => res.json()).then(res => {\n      setCorporateData(res.data.boards[0].items);\n      setCorporateArray();\n      console.log(res.data.boards[0].items, \"222\");\n    });\n  }\n\n  async function setCorporateArray() {\n    let tempCorporateData = [];\n\n    if (corporateData.length > 0) {\n      corporateData.forEach((item, index) => {\n        console.log(item, \"ITEMMM\");\n        item.column_values.forEach((column, index) => {\n          console.log(column, \"item_values\");\n\n          if (column.text.length > 0) {\n            tempCorporateData.push(column.text);\n          }\n        });\n      });\n    } // setCorporateHolidays(tempCorporateData);\n\n\n    console.log(tempCorporateData, \"temp cor\");\n    console.log(corporateData, \"use state corporate\"); // setActivityLoader(true);\n  } // const [personalHolidays, setPersonalHolidays] = useState([\"2022-07-14\"]);\n  // API\n  // useEffect(() => {\n  //   getCorporateHolidaysAPI();\n  //   setTimeout(() => {\n  //     setCorporateArray();\n  //   }, 2500);\n  // }, []);\n\n\n  function setCustomClassName(nameOfDay, currentYear, numberOfCurrentMonth, i) {\n    if (nameOfDay === \"Sun\" || nameOfDay === \"Sat\") return \"rowCustomStyling\"; // corporateHolidays\n\n    var index, strDay, strMonth, strYear, dateArr;\n\n    for (index = 0; index < corporateHolidays.length; index++) {\n      dateArr = corporateHolidays[index].split(\"-\");\n      strYear = dateArr[0];\n      strMonth = dateArr[1];\n      strDay = dateArr[2]; // console.log(strDay, \"strDay\");\n      // console.log(strMonth, \"strMonth\");\n      // console.log(strYear, \"strYear\");\n\n      if (currentYear === strYear & numberOfCurrentMonth === strMonth & i == strDay) return \"corporateCustomStyling\";\n    } // personalHolidays\n\n\n    for (index = 0; index < personalHolidays.length; index++) {\n      dateArr = personalHolidays[index].split(\"-\");\n      strYear = dateArr[0];\n      strMonth = dateArr[1];\n      strDay = dateArr[2];\n      if (currentYear === strYear & numberOfCurrentMonth === strMonth & i == strDay) return \"personalCustomStyling\";\n    }\n  }\n\n  async function fetchMeData() {\n    let query = `query {\n      me {\n    is_guest\n    name\n    photo_thumb_small\n    id\n    }\n}`;\n    await fetch(\"https://api.monday.com/v2\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjE2ODYwNzk4NiwidWlkIjozMTY5Njk3MCwiaWFkIjoiMjAyMi0wNy0wNFQxMToxMTozMC4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTE0MTA1MTIsInJnbiI6InVzZTEifQ.AQ0i2OQeXqru5sMmRx6h-CCKf6d-CMJ_a1sp8tFJp38\"\n      },\n      body: JSON.stringify({\n        query: query\n      })\n    }).then(res => res.json()).then(res => {\n      setMePersonData(res.data.me);\n      console.log(res.data.me, \"ME\");\n    });\n  } // ----------\n  // originData ---- Default state of Table Data\n\n\n  originData.push({\n    id: \"1\",\n    totalsum: \"0\",\n    project: \"Project X\" // person: (\n    //   <span>\n    //     <img src={`${imgSrc}`} alt=\"H\" />\n    //   </span>\n    // ),\n\n  }); // Edit data fucntionality\n\n  const EditableCell = _ref => {\n    let {\n      editing,\n      dataIndex,\n      title,\n      inputType,\n      record,\n      index,\n      children,\n      ...restProps\n    } = _ref;\n    const inputNode = inputType === \"number\" ? /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 48\n    }, this) : /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 66\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"td\", { ...restProps,\n      children: editing ? /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: dataIndex,\n        style: {\n          margin: 0\n        },\n        children: inputNode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this) : children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this);\n  };\n\n  const isEditing = record => record.key === editingKey;\n\n  const edit = record => {\n    form.setFieldsValue({ ...record\n    });\n    setEditingKey(record.key);\n  };\n\n  const cancel = () => {\n    setEditingKey(\"\");\n  }; // to calculate total sum of row\n\n\n  function convertIntObj(obj) {\n    const res = {};\n    let sum = 0;\n\n    for (const key in obj) {\n      res[key] = {};\n\n      for (const prop in obj[key]) {\n        const parsed = parseInt(obj[key][prop], 10);\n        res[key][prop] = isNaN(parsed) ? obj[key][prop] : parsed;\n        sum += res[key][prop];\n      }\n    }\n\n    return sum;\n  } // save functionality, and after every updatation, total sum should be updated along with it.\n\n\n  const save = async key => {\n    try {\n      const row = await form.validateFields();\n      let newData = [...data];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item,\n          ...row\n        });\n      } else {\n        newData.push(row);\n      }\n\n      let sumTotal = convertIntObj(row);\n      console.log(sumTotal);\n      newData[index][\"totalsum\"] = sumTotal;\n      setData(newData);\n      setEditingKey(\"\");\n    } catch (errInfo) {\n      console.log(\"Validate Failed:\", errInfo);\n    }\n  }; // coloums title values\n\n\n  const columns = []; // First three fixed columns - Person, Filter and Total\n\n  columns.push({\n    title: \"Person\",\n    dataIndex: \"person\",\n    width: 100,\n    fixed: \"left\",\n    align: \"center\",\n    className: \"opaque-col\"\n  }, {\n    title: \"Project\",\n    dataIndex: \"project\",\n    width: 130,\n    fixed: \"left\",\n    className: \"opaque-col\",\n    align: \"center\",\n    filters: [{\n      text: \"Project X\",\n      value: \"Project X\"\n    }, {\n      text: \"Project Y\",\n      value: \"Project Y\"\n    }],\n    onFilter: (value, record) => record.project.toLowerCase().includes(value.toLowerCase()),\n    filterSearch: true\n  }, {\n    title: \"Total\",\n    dataIndex: \"totalsum\",\n    width: 100,\n    fixed: \"left\",\n    className: \"opaque-col\",\n    align: \"center\"\n  });\n  renderMonthColumn();\n\n  function renderMonthColumn() {\n    // days of Month as title\n    const momentObj = moment();\n    const daysInCurrentMonth = momentObj.daysInMonth(); // 31\n\n    const nameOfCurrentMonth = momentObj.format(\"MMM\"); // Jul\n\n    const numberOfCurrentMonth = momentObj.format(\"MM\"); // \"07\" for July\n\n    const currentYear = momentObj.format(\"YYYY\"); // 2022\n\n    var oneDate = moment(\"01-\" + numberOfCurrentMonth + \"-\" + currentYear, \"DD-MM-YYYY\"); // this will make an object of moment for the very first date of every month\n\n    var nameOfDay = oneDate.format(\"ddd\"); // \"Fri\" as first day of month july\n\n    var dayObj = \"\";\n\n    for (var i = 1; i <= daysInCurrentMonth; i++) {\n      columns.push({\n        title: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [i, \" \", nameOfCurrentMonth, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"nameOfDay-styling\",\n            children: nameOfDay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this),\n        // 1 Jul\n        dataIndex: `date${i}`,\n        // date1\n        width: 80,\n        key: `${i}`,\n        // 1\n        editable: true,\n        align: \"center\",\n        className: setCustomClassName(nameOfDay, currentYear, numberOfCurrentMonth, i)\n      });\n      dayObj = oneDate.add(1, \"day\"); // will keep increasing date along with for loop\n\n      nameOfDay = dayObj.format(\"ddd\"); // \"Sat\" as day of month july and will go on along with for loop\n    }\n  }\n\n  columns.push({\n    title: \"Operation\",\n    width: 120,\n    fixed: \"right\",\n    align: \"center\",\n    className: \"opaque-col\",\n    dataIndex: \"operation\",\n    render: (_, record) => {\n      const editable = isEditing(record);\n      return editable ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography.Link, {\n          onClick: () => save(record.key),\n          style: {\n            marginRight: 8\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: cancel,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(Typography.Link, {\n        disabled: editingKey !== \"\",\n        onClick: () => edit(record),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this);\n    }\n  });\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return { ...col,\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    };\n  });\n\n  const onChange = (pagination, filters, extra) => {\n    console.log(\"params\", pagination, filters, extra);\n  };\n\n  const handleAdd = () => {\n    const randomNumber = parseInt(Math.random() * 1000);\n    const newRow = {\n      project: \"Project\" + randomNumber,\n      totalsum: \"0\"\n    };\n    setData(pre => {\n      return [...pre, newRow];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"30px\"\n    },\n    children: activityLoader ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAdd,\n        type: \"primary\",\n        style: {\n          marginBottom: 16\n        },\n        children: \"Add a row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        component: false,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          scroll: {\n            x: 1300\n          },\n          components: {\n            body: {\n              cell: EditableCell\n            }\n          },\n          bordered: true,\n          onChange: onChange,\n          dataSource: data,\n          columns: mergedColumns // mergedColumns so it can be edited\n          ,\n          rowClassName: \"editable-row\",\n          pagination: {\n            onChange: cancel\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 451,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TableView, \"oCD7xUfntMMzvVUJCVJ3qTXk/NY=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = TableView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableView\");","map":{"version":3,"names":["React","useState","moment","Button","Form","Input","InputNumber","Popconfirm","Table","Typography","Avatar","useEffect","TableView","originData","form","useForm","data","setData","editingKey","setEditingKey","mePersonData","setMePersonData","imgSrc","setImgSrc","activityLoader","setActivityLoader","corporateHolidays","setCorporateHolidays","personalHolidays","setPersonalHolidays","corporateData","setCorporateData","fetchCorporateHolidays","then","value","console","log","error","query","fetch","method","headers","Authorization","body","JSON","stringify","res","json","boards","items","setCorporateArray","tempCorporateData","length","forEach","item","index","column_values","column","text","push","setCustomClassName","nameOfDay","currentYear","numberOfCurrentMonth","i","strDay","strMonth","strYear","dateArr","split","fetchMeData","me","id","totalsum","project","EditableCell","editing","dataIndex","title","inputType","record","children","restProps","inputNode","margin","isEditing","key","edit","setFieldsValue","cancel","convertIntObj","obj","sum","prop","parsed","parseInt","isNaN","save","row","validateFields","newData","findIndex","splice","sumTotal","errInfo","columns","width","fixed","align","className","filters","onFilter","toLowerCase","includes","filterSearch","renderMonthColumn","momentObj","daysInCurrentMonth","daysInMonth","nameOfCurrentMonth","format","oneDate","dayObj","editable","add","render","_","marginRight","mergedColumns","map","col","onCell","onChange","pagination","extra","handleAdd","randomNumber","Math","random","newRow","pre","marginBottom","x","cell"],"sources":["/Users/usamaejaz/Desktop/Nustac/quickstart-react/src/TableView.js"],"sourcesContent":["import React, { useState } from \"react\";\n// import \"antd/dist/antd.css\";\nimport \"index.css\";\nimport moment from \"moment\";\nimport { Button } from \"monday-ui-react-core\";\nimport {\n  Form,\n  Input,\n  InputNumber,\n  Popconfirm,\n  Table,\n  Typography,\n  Avatar,\n} from \"antd\";\nimport { useEffect } from \"react\";\n\n// Table View Return\nexport default function TableView() {\n  const originData = [];\n  const [form] = Form.useForm();\n  const [data, setData] = useState(originData);\n  const [editingKey, setEditingKey] = useState(\"\");\n  const [mePersonData, setMePersonData] = useState([]);\n  const [imgSrc, setImgSrc] = useState(\"\");\n  const [activityLoader, setActivityLoader] = useState(true);\n  const [corporateHolidays, setCorporateHolidays] = useState([\n    \"2022-08-16\",\n    \"2022-08-03\",\n  ]);\n  const [personalHolidays, setPersonalHolidays] = useState([\n    \"2022-08-24\",\n    \"2022-08-10\",\n  ]);\n  const [corporateData, setCorporateData] = useState([]);\n\n  useEffect(() => {\n    fetchCorporateHolidays().then(\n      function (value) {\n        console.log(\"PASSED\");\n\n        // setCorporateArray();\n      },\n      function (error) {\n        console.log(\"Null\");\n      }\n    );\n    // fetchMeData();\n    // setImgSrc(mePersonData.photo_thumb_small);\n  }, []);\n\n  async function fetchCorporateHolidays() {\n    let query = `query {\n    boards (ids: 2901550979) {\n    name\n    state\n    board_folder_id\n    items {\n      id\n      name\n      column_values {\n        text\n      }\n    }\n  }\n}`;\n\n    await fetch(\"https://api.monday.com/v2\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization:\n          \"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjE2ODYwNzk4NiwidWlkIjozMTY5Njk3MCwiaWFkIjoiMjAyMi0wNy0wNFQxMToxMTozMC4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTE0MTA1MTIsInJnbiI6InVzZTEifQ.AQ0i2OQeXqru5sMmRx6h-CCKf6d-CMJ_a1sp8tFJp38\",\n      },\n      body: JSON.stringify({\n        query: query,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setCorporateData(res.data.boards[0].items);\n        setCorporateArray();\n        console.log(res.data.boards[0].items, \"222\");\n      });\n  }\n\n  async function setCorporateArray() {\n    let tempCorporateData = [];\n\n    if (corporateData.length > 0) {\n      corporateData.forEach((item, index) => {\n        console.log(item, \"ITEMMM\");\n        item.column_values.forEach((column, index) => {\n          console.log(column, \"item_values\");\n          if (column.text.length > 0) {\n            tempCorporateData.push(column.text);\n          }\n        });\n      });\n    }\n\n    // setCorporateHolidays(tempCorporateData);\n\n    console.log(tempCorporateData, \"temp cor\");\n    console.log(corporateData, \"use state corporate\");\n\n    // setActivityLoader(true);\n  }\n\n  // const [personalHolidays, setPersonalHolidays] = useState([\"2022-07-14\"]);\n\n  // API\n\n  // useEffect(() => {\n  //   getCorporateHolidaysAPI();\n  //   setTimeout(() => {\n  //     setCorporateArray();\n  //   }, 2500);\n  // }, []);\n\n  function setCustomClassName(nameOfDay, currentYear, numberOfCurrentMonth, i) {\n    if (nameOfDay === \"Sun\" || nameOfDay === \"Sat\") return \"rowCustomStyling\";\n\n    // corporateHolidays\n    var index, strDay, strMonth, strYear, dateArr;\n\n    for (index = 0; index < corporateHolidays.length; index++) {\n      dateArr = corporateHolidays[index].split(\"-\");\n\n      strYear = dateArr[0];\n      strMonth = dateArr[1];\n      strDay = dateArr[2];\n\n      // console.log(strDay, \"strDay\");\n      // console.log(strMonth, \"strMonth\");\n      // console.log(strYear, \"strYear\");\n\n      if (\n        (currentYear === strYear) &\n        (numberOfCurrentMonth === strMonth) &\n        (i == strDay)\n      )\n        return \"corporateCustomStyling\";\n    }\n\n    // personalHolidays\n    for (index = 0; index < personalHolidays.length; index++) {\n      dateArr = personalHolidays[index].split(\"-\");\n\n      strYear = dateArr[0];\n      strMonth = dateArr[1];\n      strDay = dateArr[2];\n\n      if (\n        (currentYear === strYear) &\n        (numberOfCurrentMonth === strMonth) &\n        (i == strDay)\n      )\n        return \"personalCustomStyling\";\n    }\n  }\n\n  async function fetchMeData() {\n    let query = `query {\n      me {\n    is_guest\n    name\n    photo_thumb_small\n    id\n    }\n}`;\n    await fetch(\"https://api.monday.com/v2\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization:\n          \"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjE2ODYwNzk4NiwidWlkIjozMTY5Njk3MCwiaWFkIjoiMjAyMi0wNy0wNFQxMToxMTozMC4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTE0MTA1MTIsInJnbiI6InVzZTEifQ.AQ0i2OQeXqru5sMmRx6h-CCKf6d-CMJ_a1sp8tFJp38\",\n      },\n      body: JSON.stringify({\n        query: query,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setMePersonData(res.data.me);\n\n        console.log(res.data.me, \"ME\");\n      });\n  }\n\n  // ----------\n\n  // originData ---- Default state of Table Data\n\n  originData.push({\n    id: \"1\",\n    totalsum: \"0\",\n    project: \"Project X\",\n    // person: (\n    //   <span>\n    //     <img src={`${imgSrc}`} alt=\"H\" />\n    //   </span>\n    // ),\n  });\n\n  // Edit data fucntionality\n\n  const EditableCell = ({\n    editing,\n    dataIndex,\n    title,\n    inputType,\n    record,\n    index,\n    children,\n    ...restProps\n  }) => {\n    const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\n    return (\n      <td {...restProps}>\n        {editing ? (\n          <Form.Item\n            name={dataIndex}\n            style={{\n              margin: 0,\n            }}\n          >\n            {inputNode}\n          </Form.Item>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  };\n\n  const isEditing = (record) => record.key === editingKey;\n\n  const edit = (record) => {\n    form.setFieldsValue({\n      ...record,\n    });\n\n    setEditingKey(record.key);\n  };\n\n  const cancel = () => {\n    setEditingKey(\"\");\n  };\n\n  // to calculate total sum of row\n  function convertIntObj(obj) {\n    const res = {};\n    let sum = 0;\n    for (const key in obj) {\n      res[key] = {};\n      for (const prop in obj[key]) {\n        const parsed = parseInt(obj[key][prop], 10);\n        res[key][prop] = isNaN(parsed) ? obj[key][prop] : parsed;\n        sum += res[key][prop];\n      }\n    }\n    return sum;\n  }\n\n  // save functionality, and after every updatation, total sum should be updated along with it.\n\n  const save = async (key) => {\n    try {\n      const row = await form.validateFields();\n      let newData = [...data];\n      const index = newData.findIndex((item) => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item, ...row });\n      } else {\n        newData.push(row);\n      }\n\n      let sumTotal = convertIntObj(row);\n      console.log(sumTotal);\n\n      newData[index][\"totalsum\"] = sumTotal;\n      setData(newData);\n\n      setEditingKey(\"\");\n    } catch (errInfo) {\n      console.log(\"Validate Failed:\", errInfo);\n    }\n  };\n\n  // coloums title values\n  const columns = [];\n\n  // First three fixed columns - Person, Filter and Total\n\n  columns.push(\n    {\n      title: \"Person\",\n      dataIndex: \"person\",\n      width: 100,\n      fixed: \"left\",\n      align: \"center\",\n      className: \"opaque-col\",\n    },\n    {\n      title: \"Project\",\n      dataIndex: \"project\",\n      width: 130,\n      fixed: \"left\",\n      className: \"opaque-col\",\n      align: \"center\",\n\n      filters: [\n        {\n          text: \"Project X\",\n          value: \"Project X\",\n        },\n        {\n          text: \"Project Y\",\n          value: \"Project Y\",\n        },\n      ],\n      onFilter: (value, record) =>\n        record.project.toLowerCase().includes(value.toLowerCase()),\n      filterSearch: true,\n    },\n    {\n      title: \"Total\",\n      dataIndex: \"totalsum\",\n      width: 100,\n      fixed: \"left\",\n      className: \"opaque-col\",\n      align: \"center\",\n    }\n  );\n\n  renderMonthColumn();\n\n  function renderMonthColumn() {\n    // days of Month as title\n\n    const momentObj = moment();\n    const daysInCurrentMonth = momentObj.daysInMonth(); // 31\n    const nameOfCurrentMonth = momentObj.format(\"MMM\"); // Jul\n    const numberOfCurrentMonth = momentObj.format(\"MM\"); // \"07\" for July\n    const currentYear = momentObj.format(\"YYYY\"); // 2022\n\n    var oneDate = moment(\n      \"01-\" + numberOfCurrentMonth + \"-\" + currentYear,\n      \"DD-MM-YYYY\"\n    ); // this will make an object of moment for the very first date of every month\n\n    var nameOfDay = oneDate.format(\"ddd\"); // \"Fri\" as first day of month july\n    var dayObj = \"\";\n\n    for (var i = 1; i <= daysInCurrentMonth; i++) {\n      columns.push({\n        title: (\n          <span>\n            {i} {nameOfCurrentMonth}{\" \"}\n            <span className=\"nameOfDay-styling\">{nameOfDay}</span>\n          </span>\n        ), // 1 Jul\n        dataIndex: `date${i}`, // date1\n        width: 80,\n        key: `${i}`, // 1\n        editable: true,\n        align: \"center\",\n        className: setCustomClassName(\n          nameOfDay,\n          currentYear,\n          numberOfCurrentMonth,\n          i\n        ),\n      });\n\n      dayObj = oneDate.add(1, \"day\"); // will keep increasing date along with for loop\n      nameOfDay = dayObj.format(\"ddd\"); // \"Sat\" as day of month july and will go on along with for loop\n    }\n  }\n\n  columns.push({\n    title: \"Operation\",\n    width: 120,\n    fixed: \"right\",\n    align: \"center\",\n    className: \"opaque-col\",\n    dataIndex: \"operation\",\n    render: (_, record) => {\n      const editable = isEditing(record);\n      return editable ? (\n        <span>\n          <Typography.Link\n            onClick={() => save(record.key)}\n            style={{\n              marginRight: 8,\n            }}\n          >\n            Save\n          </Typography.Link>\n          <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n            <a>Cancel</a>\n          </Popconfirm>\n        </span>\n      ) : (\n        <Typography.Link\n          disabled={editingKey !== \"\"}\n          onClick={() => edit(record)}\n        >\n          Edit\n        </Typography.Link>\n      );\n    },\n  });\n\n  const mergedColumns = columns.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n      }),\n    };\n  });\n\n  const onChange = (pagination, filters, extra) => {\n    console.log(\"params\", pagination, filters, extra);\n  };\n\n  const handleAdd = () => {\n    const randomNumber = parseInt(Math.random() * 1000);\n    const newRow = {\n      project: \"Project\" + randomNumber,\n      totalsum: \"0\",\n    };\n\n    setData((pre) => {\n      return [...pre, newRow];\n    });\n  };\n\n  return (\n    <div style={{ margin: \"30px\" }}>\n      {activityLoader ? (\n        <div>\n          <Button\n            onClick={handleAdd}\n            type=\"primary\"\n            style={{\n              marginBottom: 16,\n            }}\n          >\n            Add a row\n          </Button>\n          <Form form={form} component={false}>\n            <Table\n              scroll={{\n                x: 1300,\n              }}\n              components={{\n                body: {\n                  cell: EditableCell,\n                },\n              }}\n              bordered\n              onChange={onChange}\n              dataSource={data}\n              columns={mergedColumns} // mergedColumns so it can be edited\n              rowClassName=\"editable-row\"\n              pagination={{\n                onChange: cancel,\n              }}\n            />\n          </Form>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}