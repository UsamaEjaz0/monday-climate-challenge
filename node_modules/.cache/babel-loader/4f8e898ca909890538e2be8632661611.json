{"ast":null,"code":"var _jsxFileName = \"/Users/usamaejaz/Desktop/Nustac/quickstart-react/src/components/board/board.js\";\nimport React from \"react\";\nimport \"./boardList.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport { Box, Clickable, Flex, Heading, Label, List, ListItem } from \"monday-ui-react-core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderItem = (color, board, item) => {\n      return /*#__PURE__*/_jsxDEV(Clickable, {\n        className: \"item\",\n        onClick: () => monday.execute('openItemCard', {\n          itemId: item.id\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task\",\n          style: {\n            borderLeft: `thick solid ${color}`\n          },\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          className: \"sentiment\",\n          text: \"Neutral\",\n          color: Label.colors.POSITIVE\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderGroup = (board, group) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          className: {},\n          style: {\n            color: group.color\n          },\n          type: Heading.types.h5,\n          value: group.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          direction: Flex.directions.ROW,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sentiment\",\n            children: \"Sentiment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-items\",\n          children: group.items.map(item => this.renderItem(group.color, board, item))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.getGroups = board => {\n      const {\n        settings\n      } = this.state;\n      const {\n        groupByColumn\n      } = settings;\n      const groupByColumnId = groupByColumn ? Object.keys(groupByColumn)[0] : null;\n      const groups = {};\n\n      for (const item of board.items) {\n        const groupId = groupByColumnId ? this.getColumnValue(item, groupByColumnId).text : item.group.id;\n\n        if (!groups[groupId]) {\n          const groupTitle = groupByColumnId ? groupId : board.groups.find(group => group.id == groupId).title;\n          const groupColor = groupByColumnId ? groupId : board.groups.find(group => group.id == groupId).color;\n          groups[groupId] = {\n            items: [],\n            id: groupId,\n            title: groupTitle,\n            color: groupColor\n          };\n        }\n\n        groups[groupId].items.push(item);\n      }\n\n      return Object.values(groups);\n    };\n\n    this.renderBoard = board => {};\n  }\n\n  getColumnValue(item, columnId) {\n    return item.column_values.find(columnValue => columnValue.id == columnId) || {};\n  }\n\n  render() {\n    const {\n      settings\n    } = this.state;\n    const groups = this.getGroups(this.props.board);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      style: {\n        background: settings.color\n      },\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        type: Heading.types.h2,\n        value: this.props.board.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-groups\",\n        children: groups.map(group => this.renderGroup(this.props.board, group))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"names":["React","mondaySdk","Box","Clickable","Flex","Heading","Label","List","ListItem","monday","Board","Component","constructor","props","renderItem","color","board","item","execute","itemId","id","borderLeft","name","colors","POSITIVE","renderGroup","group","types","h5","title","directions","ROW","items","map","getGroups","settings","state","groupByColumn","groupByColumnId","Object","keys","groups","groupId","getColumnValue","text","groupTitle","find","groupColor","push","values","renderBoard","columnId","column_values","columnValue","render","background","h2"],"sources":["/Users/usamaejaz/Desktop/Nustac/quickstart-react/src/components/board/board.js"],"sourcesContent":["import React from \"react\";\nimport \"./boardList.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport {Box, Clickable, Flex, Heading, Label, List, ListItem} from \"monday-ui-react-core\";\n\nconst monday = mondaySdk();\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n\n    renderItem = (color, board, item) => {\n\n        return (\n            <Clickable className=\"item\" onClick={() => monday.execute('openItemCard', {itemId: item.id})}>\n\n                <div className=\"task\" style={{borderLeft: `thick solid ${color}`}} >{item.name}</div>\n                <Label className=\"sentiment\" text=\"Neutral\" color={Label.colors.POSITIVE}/>\n                {/*{<div className=\"sentiment\">Neutral</div>}*/}\n            </Clickable>\n        );\n    };\n\n    renderGroup = (board, group) => {\n        return (\n            <div className=\"group\">\n                <Heading className={{}} style={{color: group.color}} type={Heading.types.h5} value={group.title}/>\n                <Flex direction={Flex.directions.ROW}>\n                    {<div className=\"task\">Task</div>}\n                    {<div className=\"sentiment\">Sentiment</div>}\n                </Flex>\n\n                <div\n                    className=\"group-items\">{group.items.map((item) => this.renderItem(group.color, board, item))}</div>\n            </div>\n        );\n    };\n\n    getColumnValue(item, columnId) {\n        return item.column_values.find((columnValue) => columnValue.id == columnId) || {};\n    }\n\n    getGroups = (board) => {\n        const {settings} = this.state;\n        const {groupByColumn} = settings;\n        const groupByColumnId = groupByColumn ? Object.keys(groupByColumn)[0] : null;\n\n        const groups = {};\n        for (const item of board.items) {\n            const groupId = groupByColumnId ? this.getColumnValue(item, groupByColumnId).text : item.group.id;\n            if (!groups[groupId]) {\n                const groupTitle = groupByColumnId ? groupId : board.groups.find((group) => group.id == groupId).title;\n                const groupColor = groupByColumnId ? groupId : board.groups.find((group) => group.id == groupId).color;\n                groups[groupId] = {items: [], id: groupId, title: groupTitle, color: groupColor};\n            }\n            groups[groupId].items.push(item);\n        }\n\n        return Object.values(groups);\n    };\n\n    renderBoard = (board) => {\n\n    };\n\n\n    render() {\n        const {settings} = this.state;\n        const groups = this.getGroups(this.props.board);\n        return (\n            <div className=\"board\" style={{background: settings.color}}>\n                <Heading type={Heading.types.h2} value={this.props.board.name}/>\n                <div className=\"board-groups\">{groups.map((group) => this.renderGroup(this.props.board, group))}</div>\n            </div>\n        );\n    }\n\n\n}\n\nexport default Board;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}